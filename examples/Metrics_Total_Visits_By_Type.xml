<crf:areaConfiguration xmlns:crf="http://www.crfmanager.com/system/xml">
  <crf:queryBatch>
    <crf:query name="VisitTypes">
      <crf:searchOptions>
        <crf:parameter name="StartMonth" type="int" displayName="Starting on the 1&lt;sup&gt;st&lt;/sup&gt; of">
          <crf:query>
            SET NOCOUNT ON;
            DECLARE @Months TABLE
            (
            TextField NVARCHAR(10),
            ValueField INT
            )

            INSERT INTO @Months (TextField,ValueField) VALUES ('January',1);
            INSERT INTO @Months (TextField,ValueField) VALUES ('February',2);
            INSERT INTO @Months (TextField,ValueField) VALUES ('March',3);
            INSERT INTO @Months (TextField,ValueField) VALUES ('April',4);
            INSERT INTO @Months (TextField,ValueField) VALUES ('May',5);
            INSERT INTO @Months (TextField,ValueField) VALUES ('June',6);
            INSERT INTO @Months (TextField,ValueField) VALUES ('July',7);
            INSERT INTO @Months (TextField,ValueField) VALUES ('August',8);
            INSERT INTO @Months (TextField,ValueField) VALUES ('September',9);
            INSERT INTO @Months (TextField,ValueField) VALUES ('October',10);
            INSERT INTO @Months (TextField,ValueField) VALUES ('November',11);
            INSERT INTO @Months (TextField,ValueField) VALUES ('December',12);

            SELECT TextField,ValueField FROM @Months;
          </crf:query>
          <crf:parameter name="StartYear" type="int" displayName=" " maxLength="4" />
        </crf:parameter>
        <crf:parameter name="EndMonth" type="int" displayName="and ending before 1&lt;sup&gt;st&lt;/sup&gt; of">
          <crf:query>
            DECLARE @Months TABLE
            (
            TextField NVARCHAR(10),
            ValueField INT
            )

            INSERT INTO @Months (TextField,ValueField) VALUES ('January',1);
            INSERT INTO @Months (TextField,ValueField) VALUES ('February',2);
            INSERT INTO @Months (TextField,ValueField) VALUES ('March',3);
            INSERT INTO @Months (TextField,ValueField) VALUES ('April',4);
            INSERT INTO @Months (TextField,ValueField) VALUES ('May',5);
            INSERT INTO @Months (TextField,ValueField) VALUES ('June',6);
            INSERT INTO @Months (TextField,ValueField) VALUES ('July',7);
            INSERT INTO @Months (TextField,ValueField) VALUES ('August',8);
            INSERT INTO @Months (TextField,ValueField) VALUES ('September',9);
            INSERT INTO @Months (TextField,ValueField) VALUES ('October',10);
            INSERT INTO @Months (TextField,ValueField) VALUES ('November',11);
            INSERT INTO @Months (TextField,ValueField) VALUES ('December',12);

            SELECT TextField,ValueField FROM @Months;
          </crf:query>
          <crf:parameter name="EndYear" type="int" displayName=" " maxLength="4" />
        </crf:parameter>
        <crf:parameter name="ResourceOwners" type="nvarchar" displayName="and the visit was based at" defaultText="any Locations" multiSelect="true">
          <crf:query>
            SELECT
            VR.ResourceID AS ValueField,
            VR.RTName + ': ' + VR.ResourceName AS TextField
            FROM
            view_Resources VR INNER JOIN
            (SELECT DISTINCT WAreaID FROM view_UserRights WHERE (WUserID=@UserID) AND (WRView=1)) VUR ON VR.RAreaID=VUR.WAreaID
            WHERE
            ResourceID IN (SELECT ROwnerID FROM WTCRFResources)
            AND (ResourceTypeID=1016)
            ORDER BY
            RTName,
            ResourceName;
          </crf:query>
        </crf:parameter>
        <crf:parameter name="Locations" type="nvarchar" displayName="in the following rooms" multiSelect="true">
          <crf:query>
            SELECT
            VR.ResourceID AS ValueField,
            VR.RTName + ': ' + VR.ResourceName AS TextField
            FROM
            view_Resources VR INNER JOIN
            (SELECT DISTINCT WAreaID FROM view_UserRights WHERE (WUserID=@UserID) AND (WRView=1)) VUR ON VR.RAreaID=VUR.WAreaID
            WHERE
            (ResourceTypeID IN (1010,1018))
            ORDER BY
            RTName,
            ResourceName;
          </crf:query>
        </crf:parameter>
        <crf:parameter name="StudySummary" type="nvarchar" displayName="and the study name or identifier" maxLength="50"  useSearchConditions="true"/>          
      </crf:searchOptions>
      <crf:statement>
        SET NOCOUNT ON;

        DECLARE @StartDate DATETIME;
        DECLARE @EndDate DATETIME;
        DECLARE @ResourceOwners NVARCHAR(MAX);
        DECLARE @Locations NVARCHAR(MAX);
        DECLARE @StudySummary NVARCHAR(500);

        IF (@ItemID IS NOT NULL)
        BEGIN
        DECLARE @ViewParams TABLE
        (
        FieldName VARCHAR(MAX),
        FieldValue VARCHAR(MAX)
        )

        INSERT INTO @ViewParams
        SELECT
        WSFName,
        WSFValue
        FROM
        WTCRFStateFields
        WHERE
        WSFStateID=@ItemID;

        SELECT @ResourceOwners=FieldValue FROM @ViewParams WHERE FieldName='ResourceOwners';
        SELECT @Locations=FieldValue FROM @ViewParams WHERE FieldName='Locations';
        SELECT @StudySummary=FieldValue FROM @ViewParams WHERE FieldName='StudySummary';

        SELECT @StartDate=CONVERT(DATETIME,'1/' + (SELECT CONVERT(VARCHAR(2),M.FieldValue)
        FROM @ViewParams M WHERE M.FieldName='StartMonth') + '/' +
        CONVERT(VARCHAR(4),Y.FieldValue),103 ) FROM @ViewParams Y WHERE FieldName='StartYear';

        SELECT @EndDate=CONVERT(DATETIME,'1/' + (SELECT CONVERT(VARCHAR(2),M.FieldValue)
        FROM @ViewParams M WHERE M.FieldName='EndMonth') + '/' +
        CONVERT(VARCHAR(4),Y.FieldValue),103 ) FROM @ViewParams Y WHERE FieldName='EndYear';
        END;

        IF (@EndDate&lt;@StartDate)
        BEGIN
        RETURN;
        END;

        DECLARE @TotalSections INT;
        DECLARE @SectionIdx INT;
        DECLARE @SectionStartDate DATETIME;
        DECLARE @SectionEndDate DATETIME;

        SELECT
        @SectionIdx=1,
        @SectionStartDate=@StartDate,
        @SectionEndDate=DATEADD(month,1,@StartDate),
        @TotalSections=DATEDIFF(month,@StartDate,@EndDate);

        DECLARE @Owners TABLE
        (
        ROwnerID UNIQUEIDENTIFIER PRIMARY KEY
        )

        INSERT INTO @Owners(ROwnerID)
        SELECT
        ItemID
        FROM
        dbo.get_UniqueIdentifierTable(@ResourceOwners);

        DECLARE @Rooms TABLE
        (
        RoomID UNIQUEIDENTIFIER PRIMARY KEY
        )

        INSERT INTO @Rooms(RoomID)
        SELECT
        ItemID
        FROM
        dbo.get_UniqueIdentifierTable(@Locations);


        DECLARE @Events TABLE
        (
        Idx INT IDENTITY(1,1),
        SectionIndex INT,
        SectionStartDate DATETIME,
        SectionEndDate DATETIME,
        ResourceID UNIQUEIDENTIFIER,
        StartDate DATETIME,
        EndDate DATETIME,
        Days INT,
        StatusSubTypeID SMALLINT,
        RootEventID UNIQUEIDENTIFIER,
        IsDummy BIT,
        IsOutreach BIT,
        IsTelephone BIT,
        IsSample BIT,
        VisitCategory VARCHAR(20),
        DateLabel VARCHAR(10),
        RecordSelectStatus SMALLINT DEFAULT 1
        )

        WHILE (@SectionIdx&lt;=@TotalSections)
        BEGIN
        /** Get all bookings starting before or within the range */
        INSERT INTO @Events (SectionIndex,SectionStartDate,SectionEndDate,ResourceID,
        StartDate,EndDate,StatusSubTypeID,RootEventID,IsDummy,IsOutreach,IsTelephone,IsSample,VisitCategory,DateLabel)
        SELECT
        @SectionIdx,
        @SectionStartDate,
        @SectionEndDate,
        VRE.ResourceID,
        VRE.TStartDate,
        VRE.TEndDate,
        VRE.RESTSubTypeID,
        WRCE.RECERootID,
        CASE VRE.ResourceName
        WHEN '[Patient]' THEN
        1
        ELSE
        0
        END,
        CASE
        /** Identify any "Outreach" accommodation as an outreach visit */
        WHEN VRE_A.ResourceName LIKE '%Outreach%' THEN
        1
        ELSE
        0
        END,
        CASE
        /** Identify any "Telephone" visit types as an telephone visit */
        WHEN (VRE_VT.ResourceName LIKE '%Telephone%') OR (VRE_VT.REName LIKE '%Telephone%') THEN
        1
        ELSE
        0
        END,
        CASE
        /** Identify any "Sample processing" visit types as sample processing visit */
        WHEN (VRE_VT.ResourceName='Sample Processing') THEN
        1
        ELSE
        0
        END,
        CASE
        WHEN (DATEDIFF(minute,VRE.TStartDate,VRE.TEndDate)&lt;240) THEN
        'Out patient'
        WHEN (DATEDIFF(minute,VRE.TStartDate,VRE.TEndDate)&gt;=240)
        AND (DATEDIFF(minute,VRE.TStartDate,VRE.TEndDate)&lt;=480) THEN
        'Day patient'
        WHEN (DATEDIFF(minute,VRE.TStartDate,VRE.TEndDate)&gt;480)
        AND (DATEDIFF(day,VRE.TStartDate,VRE.TEndDate)&lt;1) THEN
        'In patient'
        WHEN (DATEDIFF(day,VRE.TStartDate,VRE.TEndDate)&gt;0) THEN
        'Overnight'
        END,
        CONVERT(VARCHAR(10),VRE.TStartDate,103)
        FROM
        view_ResourceEvents VRE INNER JOIN WTCRFResourceChildEvents WRCE ON VRE.REventID=WRCE.RECEChildID
        INNER JOIN view_ResourceEvents VRE_A ON VRE_A.REventID=WRCE.RECEParentID
        INNER JOIN WTCRFResourceChildEvents WRCE_Visit ON VRE_A.REventID=WRCE_Visit.RECEChildID
        INNER JOIN view_ResourceChildEvents VRE_VT ON VRE_VT.REventID=WRCE_Visit.RECEParentID
        INNER JOIN view_Studies VS ON WRCE.RECERootID=VS.SREventID
        INNER JOIN (SELECT DISTINCT WAreaID FROM view_UserRights WHERE (WUserID=@UserID) AND (WRView=1)) PATIENTRIGHTS ON VRE.RAreaID=PATIENTRIGHTS.WAreaID
        INNER JOIN (SELECT DISTINCT WAreaID FROM view_UserRights WHERE (WRView=1) AND (WUserID=@UserID)) STUDYRIGHTS ON VS.REAreaID=STUDYRIGHTS.WAreaID
        WHERE
        (VRE.ResourceTypeID=31) AND (VRE.RESTSubTypeID=5)
        AND (VRE.TStartDate&gt;=@SectionStartDate) AND (VRE.TStartDate&lt;@SectionEndDate)
        AND (@Locations IS NULL OR VRE_A.ResourceID IN (SELECT RoomID FROM @Rooms))
        AND (@ResourceOwners IS NULL OR VRE_A.ROwnerID IN (SELECT ROwnerID FROM @Owners))
        AND (@StudySummary IS NULL OR VS.RESummary LIKE @StudySummary);


        SET @SectionIdx=@SectionIdx+1;
        SELECT
        @SectionStartDate=DATEADD(month,1,@SectionStartDate),
        @SectionEndDate=DATEADD(month,1,@SectionEndDate);
        END;


        /** Set the general details for each event. */
        UPDATE
        @Events
        SET
        Days=DATEDIFF(day,StartDate,EndDate);


        /** Categorised visits per section */
        /** Combine multi visits in single day to one visit covering min start and max end time */
        INSERT INTO @Events (SectionIndex,SectionStartDate,SectionEndDate,ResourceID,DateLabel,
        StartDate,EndDate,StatusSubTypeID,IsDummy,IsOutreach,IsTelephone,IsSample,RecordSelectStatus)
        SELECT
        SectionIndex,
        SectionStartDate,
        SectionEndDate,
        ResourceID,
        DateLabel,
        (SELECT MIN(ES.StartDate) FROM @Events ES WHERE E.ResourceID=ES.ResourceID AND E.DateLabel=ES.DateLabel),
        (SELECT MAX(ES.EndDate) FROM @Events ES WHERE E.ResourceID=ES.ResourceID AND E.DateLabel=ES.DateLabel),
        StatusSubTypeID,0,0,0,0,2
        FROM
        @Events E
        WHERE
        (IsDummy=0)
        AND (IsOutreach=0)
        AND (IsTelephone=0)
        AND (IsSample=0)
        GROUP BY
        SectionIndex,
        SectionStartDate,
        SectionEndDate,
        DateLabel,
        ResourceID,
        StatusSubTypeID,
        RootEventID
        HAVING
        COUNT(DateLabel)&gt;1;

        /** Update the visit category for combined visits */
        UPDATE
        @Events
        SET
        VisitCategory=
        CASE
        WHEN (DATEDIFF(minute,StartDate,EndDate)&lt;240) THEN
        'Out patient'
        WHEN (DATEDIFF(minute,StartDate,EndDate)&gt;=240)
        AND (DATEDIFF(minute,StartDate,EndDate)&lt;=480) THEN
        'Day patient'
        WHEN (DATEDIFF(minute,StartDate,EndDate)&gt;480)
        AND (DATEDIFF(day,StartDate,EndDate)&lt;1) THEN
        'In patient'
        WHEN (DATEDIFF(day,StartDate,EndDate)&gt;0) THEN
        'Overnight'

        END
        WHERE
        RecordSelectStatus=2;

        /** Mark records from which duplicates were obtained to prevent counting them */
        UPDATE
        @Events
        SET
        RecordSelectStatus=0
        WHERE
        (CONVERT(VARCHAR(60),ResourceID)+DateLabel) IN
        (SELECT (CONVERT(VARCHAR(60),ResourceID)+DateLabel) FROM @Events WHERE RecordSelectStatus=2)
        AND (RecordSelectStatus=1);


        DECLARE @SectionTotals TABLE
        (
        SectionIndex INT NOT NULL,
        TotalVisits INT NOT NULL DEFAULT 0
        )

        DECLARE @VisitTotals TABLE
        (
        VisitCategory VARCHAR(20) NOT NULL,
        TotalCategoryVisits INT NOT NULL DEFAULT 0
        )


        INSERT INTO @SectionTotals(SectionIndex,TotalVisits)
        SELECT
        SectionIndex,
        COUNT(StatusSubTypeID)
        FROM
        @Events
        WHERE
        (RecordSelectStatus IN (1,2))
        GROUP BY
        SectionIndex;

        INSERT INTO @VisitTotals(VisitCategory,TotalCategoryVisits)
        SELECT
        VisitCategory,
        COUNT(StatusSubTypeID)
        FROM
        @Events
        WHERE
        (RecordSelectStatus IN (1,2))
        GROUP BY
        VisitCategory;

        DECLARE @Sections TABLE
        (
        SectionIndex INT NOT NULL,
        SectionStartDate DATETIME NOT NULL
        )

        INSERT INTO @Sections
        SELECT
        DISTINCT
        SectionIndex,
        SectionStartDate
        FROM
        @Events;


        DECLARE @TotalVisits INT;
        SET @TotalVisits=COALESCE((SELECT COUNT(ET.StatusSubTypeID) FROM @Events ET WHERE (ET.RecordSelectStatus IN (1,2))),0);

        SELECT
        S.SectionIndex,
        RIGHT(CONVERT(NVARCHAR(12),S.SectionStartDate,106),8) AS SectionStartDate,
        (SELECT COUNT(ET.StatusSubTypeID) AS EventCount FROM @Events ET WHERE (ET.SectionIndex=S.SectionIndex) AND (ET.IsOutreach=0) AND (ET.IsTelephone=0) AND (ET.IsSample=0) AND (ET.RecordSelectStatus IN (1,2)) AND (ET.VisitCategory='Day patient')) AS TotalDayPatient,
        (SELECT COUNT(ET.StatusSubTypeID) AS EventCount FROM @Events ET WHERE (ET.SectionIndex=S.SectionIndex) AND (ET.IsOutreach=0) AND (ET.IsTelephone=0) AND (ET.IsSample=0) AND (ET.RecordSelectStatus IN (1,2)) AND (ET.VisitCategory='In patient')) AS TotalInPatient,
        (SELECT COUNT(ET.StatusSubTypeID) AS EventCount FROM @Events ET WHERE (ET.SectionIndex=S.SectionIndex) AND (ET.IsOutreach=0) AND (ET.IsTelephone=0) AND (ET.IsSample=0) AND (ET.RecordSelectStatus IN (1,2)) AND (ET.VisitCategory='Out patient')) AS TotalOutPatient,
        (SELECT COUNT(ET.StatusSubTypeID) AS EventCount FROM @Events ET WHERE (ET.SectionIndex=S.SectionIndex) AND (ET.IsOutreach=0) AND (ET.IsTelephone=0) AND (ET.IsSample=0) AND (ET.RecordSelectStatus IN (1,2)) AND (ET.VisitCategory='Overnight')) AS TotalOvernight,
        (SELECT COUNT(ET.StatusSubTypeID) AS EventCount FROM @Events ET WHERE (ET.SectionIndex=S.SectionIndex) AND (ET.IsOutreach=1) AND (ET.IsTelephone=0) AND (ET.IsSample=0) AND (ET.RecordSelectStatus IN (1,2)) ) AS TotalOutreach,
        (SELECT COUNT(ET.StatusSubTypeID) AS EventCount FROM @Events ET WHERE (ET.IsTelephone=1) AND (ET.SectionIndex=S.SectionIndex)  AND (ET.RecordSelectStatus IN (1,2)) ) AS TotalTelephone,
        (SELECT COUNT(ET.StatusSubTypeID) AS EventCount FROM @Events ET WHERE (ET.IsSample=1) AND (ET.SectionIndex=S.SectionIndex)  AND (ET.RecordSelectStatus IN (1,2)) ) AS TotalSample,
        @StartDate AS ReportStartDate,
        @EndDate AS ReportEndDate
        FROM
        @Sections S
        ORDER BY
        S.SectionIndex;

        SET @TotalRecords=@@ROWCOUNT;
      </crf:statement>
    </crf:query>
    <crf:query name="Owners">
      <crf:statement>
        SELECT
        ResourceName
        FROM
        view_Resources
        WHERE
        (ResourceID IN (SELECT ROwnerID FROM @Owners))
        ORDER BY 
        ResourceName;
      </crf:statement>
    </crf:query>
    <crf:query name="Rooms">
      <crf:statement>
        SELECT
        ResourceName
        FROM
        view_Resources
        WHERE
        (ResourceID IN (SELECT RoomID FROM @Rooms))
        ORDER BY
        ResourceName;
      </crf:statement>
    </crf:query>
    <crf:query name="Configuration">
      <crf:statement>
        SELECT
        @TotalVisits AS TotalVisits,
        CONVERT(NVARCHAR(12),@StartDate,106) AS FormattedStartDate,
        CONVERT(NVARCHAR(12),@EndDate,106) AS FormattedEndDate;
      </crf:statement>
    </crf:query>
  </crf:queryBatch>
  <crf:body id="1" title="Print format" format="text/xml">
    <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
      <xsl:output method="xml" indent="yes" omit-xml-declaration="yes" />
      <xsl:template match="NewDataSet">
        <div>
          <h1>Total Visits By Type</h1>
          <div class="paragraph">
            Between <xsl:value-of select="Configuration/FormattedStartDate" /> and <xsl:value-of select="Configuration/FormattedEndDate" />.
          </div>
          <xsl:if test="Owners">
            <div class="paragraph">
              At the following sites:
              <ul>
                <xsl:apply-templates select="Owners"/>
              </ul>
            </div>
            
          </xsl:if>
          <xsl:if test="Rooms">
            <div class="paragraph">
              In the following rooms:
              <ul>
                <xsl:apply-templates select="Rooms"/>
              </ul>
            </div>
          </xsl:if>
          <div class="help">
            Type classifications:
            <ul>
              <li>Out-patient: &lt; 4 hours</li>
              <li>Day-patient: &gt; 4 hours, &lt; 8 hours</li>
              <li>In-patient: &gt; 8 hours on the same day</li>
              <li>Overnight: visit starts and ends on different days</li>
              <li>Outreach: any visit booked into a clinical accommodation where the name contains "Outreach"</li>
              <li>Telephone: any visit where the visit type or visit name contains "Telephone"</li>
              <li>Sample Processing: any visit where the visit type is "Sample Processing"</li>
            </ul>
          </div>
          <table class="grid" cellpadding="3" cellspacing="0">
            <thead>
              <tr>
                <td>
                  Month
                </td>
                <td>
                  Out-patient
                </td>
                <td>
                  Day-patient
                </td>
                <td>
                  In-patient
                </td>
                <td>
                  Overnight
                </td>
                <td>
                  Outreach
                </td>
                <td>
                  Telephone
                </td>
                <td>
                  Sample Processing
                </td>
              </tr>
            </thead>
            <xsl:apply-templates select="VisitTypes" />
            <tr class="dgfoot">
              <td>
                Totals
              </td>
              <td>
                <xsl:value-of select="sum(VisitTypes/TotalOutPatient)" />
              </td>
              <td>
                <xsl:value-of select="sum(VisitTypes/TotalDayPatient)" />
              </td>
              <td>
                <xsl:value-of select="sum(VisitTypes/TotalInPatient)" />
              </td>
              <td>
                <xsl:value-of select="sum(VisitTypes/TotalOvernight)" />
              </td>
              <td>
                <xsl:value-of select="sum(VisitTypes/TotalOutreach)" />
              </td>
              <td>
                <xsl:value-of select="sum(VisitTypes/TotalTelephone)" />
              </td>
              <td>
                <xsl:value-of select="sum(VisitTypes/TotalSample)" />
              </td>
            </tr>
            <tr class="dgfoot">
              <td colspan="7">
                Overall Total
              </td>
              <td>
                <xsl:value-of select="Configuration/TotalVisits" />
              </td>
            </tr>
          </table>
        </div>
      </xsl:template>
      <xsl:template match="Owners">
        <li>
          <xsl:value-of select="ResourceName"/>          
        </li>
      </xsl:template>
      <xsl:template match="Rooms">
        <li>
          <xsl:value-of select="ResourceName"/>
        </li>
      </xsl:template>
      <xsl:template match="VisitTypes">
        <tr>
          <td>
            <xsl:value-of select="SectionStartDate" />
          </td>
          <td>
            <xsl:value-of select="TotalOutPatient" />
          </td>
          <td>
            <xsl:value-of select="TotalDayPatient" />
          </td>
          <td>
            <xsl:value-of select="TotalInPatient" />
          </td>
          <td>
            <xsl:value-of select="TotalOvernight" />
          </td>
          <td>
            <xsl:value-of select="TotalOutreach" />
          </td>
          <td>
            <xsl:value-of select="TotalTelephone" />
          </td>
          <td>
            <xsl:value-of select="TotalSample" />
          </td>
        </tr>
      </xsl:template>
    </xsl:stylesheet>
  </crf:body>
</crf:areaConfiguration>