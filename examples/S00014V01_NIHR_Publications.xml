<crf:areaConfiguration xmlns:crf="http://www.crfmanager.com/system/xml">
  <crf:comment>
    <crf:version>S00014V01</crf:version>
    <crf:analysis>Project Metrics</crf:analysis>
    <crf:analysis>Publications</crf:analysis>
    <crf:analysis>NIHR</crf:analysis>

    <crf:summary>Publications report formatted for NIHR</crf:summary>
    <crf:notes>

    </crf:notes>

    <crf:InternalNotes>

    </crf:InternalNotes>
  </crf:comment>
	<crf:queryBatch>
		<crf:query name="Publications">
			<crf:searchOptions>
				<crf:parameter name="StartDate" type="datetime" displayName="Search for publications released on or after">
					<crf:parameter name="EndDate" type="datetime" displayName="and before" />
				</crf:parameter>
      
			</crf:searchOptions>

			<crf:statement>
				SET NOCOUNT ON;

				DECLARE @StartDate DATETIME;
				DECLARE @EndDate DATETIME;
				DECLARE @TimeSpanType VARCHAR(40);


				IF ( @ItemID IS NOT NULL )
				BEGIN
				DECLARE @ViewParams TABLE
				(
				FieldName VARCHAR(50),
				FieldValue VARCHAR(max)
				)

				INSERT INTO @ViewParams
				SELECT
				WSFName,
				WSFValue
				FROM
				WTCRFStateFields
				WHERE
				WSFStateID=@ItemID;

				SELECT @StartDate=CONVERT(DATETIME,FieldValue,103) FROM @ViewParams WHERE FieldName='StartDate';
				SELECT @EndDate=CONVERT(DATETIME,FieldValue,103) FROM @ViewParams WHERE FieldName='EndDate';

        
				END

				IF (@EndDate&lt;@StartDate)
        BEGIN
        RETURN;
        END;

        DECLARE @Now DATETIME;
        SET @Now=GETDATE();

        DECLARE @PubList TABLE (
        PublicationID INT,
        ReportingDate DATETIME
        )

        INSERT INTO @PubList
        SELECT
        DISTINCT
        VP.PublicationID,
        VP.PReportingDate
        FROM
        view_Publications vp LEFT OUTER JOIN WTCRFResourceChildEvents WRCE ON VP.REPREventID=WRCE.RECEChildID
        INNER JOIN WTCRFResourceEvents WRE ON WRE.REventID=VP.REPREventID
        INNER JOIN (SELECT DISTINCT WAreaID FROM view_UserRights WHERE (WRView=1) AND (WUserID=@UserID)) PUB ON WRE.REAreaID=PUB.WAreaID
        INNER JOIN WTCRFAreas WA ON WA.WAreaID=PUB.WAreaID
        INNER JOIN view_StudiesWithArchive VSWA ON WRCE.RECERootID=VSWA.SREventID
        WHERE
        (VSWA.REAreaID IN (SELECT DISTINCT WAreaID FROM view_UserRights WHERE (WRView=1) AND (WUserID=@UserID)))
        AND
        VP.PTypeID IN ('e-Publication','Journal Paper')
        AND
        (@StartDate IS NULL OR PReportingDate&gt;=@StartDate)
        AND
        (@EndDate IS NULL OR PReportingDate&lt;=@EndDate);


        DECLARE @ParsedFields TABLE (
        PublicationID INT,
        ParsedAuthors NVARCHAR(MAX),
        ParsedTitle   NVARCHAR(1000),
        ParsedPublication NVARCHAR(200),
        ParsedYear INT,
        ParsedVolume NVARCHAR(50),
        ParsedIssue NVARCHAR(50),
        ParsedPages NVARCHAR(50)
        )
        
        INSERT INTO @ParsedFields (PublicationID, ParsedAuthors,ParsedTitle,ParsedPublication, ParsedYear, 
		    ParsedVolume, ParsedIssue,ParsedPages)      
        SELECT
        WP.PublicationID,
        WP.PAuthors,
        WP.PTitle,
        WP.PPublication,
        WP.PYear,
		    CASE WHEN (WP.PVolume IS NULL ) THEN '' ELSE WP.PVolume END AS Volume,
        CASE WHEN (WP.PIssue IS NOT NULL ) THEN '('+WP.PIssue+')' ELSE '' END AS Issue,
        CASE WHEN (WP.PPages IS NULL) THEN '' ELSE WP.PPages END AS Pages
        FROM
        WTCRFPublication WP INNER JOIN @PubList PL ON PL.PublicationID=WP.PublicationID

        /*Some parsing of authors and title and journal to remove unwanted chars and formatting*/
       
        /*Line Breaks*/
        UPDATE @ParsedFields
		    SET 
		    ParsedAuthors=REPLACE(REPLACE(ParsedAuthors, CHAR(13), ''), CHAR(10), ''), --line breaks
		    ParsedTitle=REPLACE(REPLACE(ParsedTitle, CHAR(13), ''), CHAR(10), ''), --line breaks
		    ParsedPublication=REPLACE(REPLACE(ParsedPublication, CHAR(13), ''), CHAR(10), '') --line breaks
		
		    /*TRAILING SPACES*/
		    WHILE EXISTS(SELECT TOP 1 * FROM @ParsedFields WHERE RIGHT(ParsedAuthors,1)=' ') 
		    BEGIN
		    Update @ParsedFields
		    SET ParsedAuthors=substring(ParsedAuthors, 1, (len(ParsedAuthors) - 1)) 
		    WHERE RIGHT(ParsedAuthors, 1) = ' '
		    END

			
		    WHILE EXISTS(SELECT TOP 1 * FROM @ParsedFields WHERE RIGHT(ParsedTitle,1)=' ') 
		    BEGIN
		    Update @ParsedFields
		    SET ParsedTitle=substring(ParsedTitle, 1, (len(ParsedTitle) - 1)) --TRAILING SPACES
		    WHERE RIGHT(ParsedTitle, 1) = ' '
		    END

		    WHILE EXISTS(SELECT TOP 1 * FROM @ParsedFields WHERE RIGHT(ParsedPublication,1)=' ') 
		    BEGIN
		    Update @ParsedFields
		    SET ParsedPublication=substring(ParsedPublication, 1, (len(ParsedPublication) - 1)) 
		    WHERE RIGHT(ParsedPublication, 1) = ' '
		    END


		    /*--TRAILING PERIODS*/
		    WHILE EXISTS(SELECT TOP 1 * FROM @ParsedFields WHERE RIGHT(ParsedAuthors,1)='.')  
		    BEGIN
		    Update @ParsedFields
		    SET ParsedAuthors=substring(ParsedAuthors, 1, (len(ParsedAuthors) - 1)) 
		    WHERE RIGHT(ParsedAuthors, 1) = '.'
		    END

		    WHILE EXISTS(SELECT TOP 1 * FROM @ParsedFields WHERE RIGHT(ParsedTitle,1)='.') 
		    BEGIN
		    Update @ParsedFields
		    SET ParsedTitle=substring(ParsedTitle, 1, (len(ParsedTitle) - 1)) --TRAILING PERIOD
		    WHERE RIGHT(ParsedTitle, 1) = '.'
		    END

		    WHILE EXISTS(SELECT TOP 1 * FROM @ParsedFields WHERE RIGHT(ParsedPublication,1)='.') 
		    BEGIN
		    Update @ParsedFields
		    SET ParsedPublication=substring(ParsedPublication, 1, (len(ParsedPublication) - 1)) --TRAILING PERIOD
		    WHERE RIGHT(ParsedPublication, 1) = '.'
		    END

        SELECT
			  PublicationID,
		    ParsedAuthors AS Authors,
			  ParsedTitle AS Title,
			  ParsedPublication AS Publication,
			  ParsedYear AS PYear,
			  ParsedVolume AS Volume,
			  ParsedIssue AS Issue,
			  ParsedPages AS Pages
			  FROM @ParsedFields
			  ORDER BY
			  PYear DESC,
			  Authors ASC,
        Title ASC

        SET @TotalRecords=@@ROWCOUNT;


      </crf:statement>
		</crf:query>

		<crf:query name="AcknowledgmentTypes">
			<crf:statement>
        SELECT
				WO.wobjectid AS TypeID,
				WO.wobjname AS Types
				FROM view_WTCRFObjectTypes VWOT INNER JOIN WTCRFObjects WO ON VWOT.WOTypeID=WO.wobjtype
				WHERE VWOT.WOTypeName = 'Publication Acknowledgement Types'
        AND WO.wobjname='NIHR Acknowledged'
				ORDER BY WO.wobjname DESC

      </crf:statement>
		</crf:query>

		<crf:query name="Acknowledgments">
			<crf:statement>
				SELECT
				PPublicationID AS PublicationID,
				PAckTypeID TypeID
				FROM WTCRFPublicationAcknowledgements
			</crf:statement>
		</crf:query>

      
		<crf:query name="Configuration">
			<crf:statement>
				SELECT
				RIGHT(CONVERT(NVARCHAR(12),@StartDate,106),8) AS FormattedStartDate,
				RIGHT(CONVERT(NVARCHAR(12),@EndDate,106),8) AS FormattedEndDate,
        @TotalRecords AS Count;
 			</crf:statement>
		</crf:query>
	</crf:queryBatch>
  
	<crf:body id="1" title="Print format" format="text/xml">
		<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
			<xsl:output method="html" indent="yes" omit-xml-declaration="yes" />
     <xsl:variable name="UseNIHRField" select="/NewDataSet/Configuration/NIHRFlag&gt;0"/>
     <xsl:variable name="empty_string"/>
       
			<xsl:template match="NewDataSet">
				<div>
					<h1>NIHR Publications</h1>
					<div class="paragraph">

					</div>
					<div class="paragraph">
						The following publications are selected:
						<ul>
              
							<li>
								Publications released during or after <xsl:value-of select="Configuration/FormattedStartDate" />
								and before <xsl:value-of select="Configuration/FormattedEndDate" />.  (This may be the electronic
                or print publication date which should be used for reporting)
							</li>
              <li>
                Any &quot;e-Publication&quot; or &quot;Journal Paper&quot;.
              </li>
              <li>
                Each publication will be listed only once
              </li>
               <li>
                 Publications are ordered by Publication Year, Author and Title
              </li>
              <li>
                Result set: <xsl:value-of select="Configuration/Count"/> Publications
              </li>
 						</ul>
					</div>
					<table class="grid" cellpadding="3" cellspacing="0">
				
						<thead>
							<tr>
                <td>
								Publication Reference (Vancouver Format)
								</td>
								<xsl:for-each select="/NewDataSet/AcknowledgmentTypes">
									<td>
										<xsl:value-of select="Types"/>
									</td>
								</xsl:for-each>
							</tr>
						</thead>
						<xsl:apply-templates select="Publications" />
					</table>
				</div>
			</xsl:template>
			<xsl:template match="Publications">
				<tr>
	        <td>
            <xsl:choose >
              <xsl:when test="Volume=$empty_string and Issue=$empty_string">
                <xsl:value-of select="concat(Authors,'. ',Title, '. ',Publication,'. ',PYear,'.')" />
               </xsl:when >
              <xsl:when test="Pages=$empty_string">
                <xsl:value-of select="concat(Authors,'. ',Title, '. ',Publication,'. ',PYear,';',Volume, Issue,'.')" />
               </xsl:when >
               <xsl:otherwise>
                <xsl:value-of select="concat(Authors,'. ',Title, '. ',Publication,'. ',PYear,';',Volume, Issue, ':', Pages,'.')" />
              </xsl:otherwise>
             </xsl:choose>
             </td>
					<xsl:apply-templates select="/NewDataSet/AcknowledgmentTypes">
						<xsl:with-param name="PublicationID" select="PublicationID"/>
					</xsl:apply-templates>
				</tr>
			</xsl:template>
      
			<xsl:template match="AcknowledgmentTypes">
				<xsl:param name="PublicationID"/>
				<td>
					<xsl:apply-templates select="/NewDataSet/Acknowledgments[(./PublicationID=$PublicationID) and (./TypeID=current()/TypeID)]"/>
  
				</td>
			</xsl:template>
			<xsl:template match="Acknowledgments">
				<div>
					<xsl:if test="TypeID">
						Yes
					</xsl:if>
				</div>
			</xsl:template>
    
  
		</xsl:stylesheet>
	</crf:body>
</crf:areaConfiguration>

